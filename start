#!/bin/bash
set -e

# If not already run as sudo, then run as sudo
if [[ "$EUID" != "0" ]]; then
  sudo "$BASH_SOURCE" "$@"
  exit 0
fi

# Check for intel when using Nvidia Optimus
if which prime-select && [[ "$(prime-select query)" != "intel" ]]; then
  echo "\`prime-select query\` gave \"$(prime-select query)\". It must be \"intel\" for this to work!"
fi

cd "$(dirname $([ -L "$BASH_SOURCE" ] && readlink -f "$BASH_SOURCE" || echo "$BASH_SOURCE"))"

GPU_UUID="$(./check_gpu.sh)"

# Setup /dev/md0 if it hasn't been setup already
if [[ ! -b /dev/md0 ]]; then
  ./create_raid_array
fi

VIRTIO="true"
if [[ "$1" == "--no-igpu" ]]; then
  USE_IGPU="false"
else
  USE_IGPU="true"
fi

if [[ "$USE_IGPU" == "true" ]]; then
  VGA="-vga none -display gtk,gl=on"
else
  VGA="-device qxl-vga,id=video0,ram_size=67108864,vram_size=67108864,vram64_size_mb=0,vgamem_mb=16,max_outputs=1"
fi

# Pass intel vGPU GVT-g
MDEV="-device vfio-pci,id=hostdev0,sysfsdev=/sys/bus/mdev/devices/$GPU_UUID"
if [[ "$USE_IGPU" == "true" ]]; then
  IGPU_ROM="./vbios_gvt_uefi.rom"
  if [[ ! -f "$IGPU_ROM" ]]; then
    echo "Error: Tried to use iGPU, but $IGPU_ROM not found!"
    exit 1
  fi
  MDEV="$MDEV,display=on,x-igd-opregion=on,ramfb=on,driver=vfio-pci-nohotplug,romfile=$IGPU_ROM"
fi

AUDIO="-device ich9-intel-hda -device hda-micro,audiodev=snd0 -audiodev pa,id=snd0,server=unix:/run/user/$(id -u "$SUDO_USER")/pulse/native"

# User virt-manager bridge to access the internet
NIC="-net bridge,br=virbr0 -net nic"
if [[ "$VIRTIO" == "true" ]]; then
  NIC="$NIC,model=virtio"
fi

CDROMS=""
if [[ -f "./virtio-win-0.1.185.iso" ]]; then
  # Used for installing virtio drivers
  CDROMS="$CDROMS -cdrom ./virtio-win-0.1.185.iso"
fi

qemu-system-x86_64 \
  -nodefaults \
  -bios /usr/share/qemu/OVMF.fd \
  -drive file=/dev/md0,media=disk,format=raw \
  -cpu host -smp 6,sockets=1,cores=3,threads=2 -enable-kvm \
  -m 8G \
  -device virtio-balloon-pci,id=balloon0 \
  $VGA $MDEV $AUDIO $NIC $CDROMS -msg timestamp=on
